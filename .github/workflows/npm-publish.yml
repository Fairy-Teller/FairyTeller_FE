name: React Deploy # Workflow 이름
on:
  push:
    branches: ["dev", "main", "40-feature-cicd-configuration"]

env:
  AWS_REGION: ap-northeast-2
  PROJECT_NAME: fairy-teller_fe
  BUCKET_NAME: fairyteller-fe-dev-deploy
  CODE_DEPLOY_APP_NAME: fairyteller-fe-dev
  DEPLOYMENT_GROUP_NAME: fairyteller-fe-dev

permissions:
  contents: read

jobs: # Job 설정
  build:
    runs-on: ubuntu-latest
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # (2) Node.js 설치
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      # (3) Dependencies 설치
      - name: Install Dependencies
        run: npm ci

      # (4) React Build
      - name: React Build
        run: npm run build

      # (5) 압축 파일 형태로 전달
      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # (6) AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY}}
          aws-region: ap-northeast-2

      # (7) S3 bucket으로 copy
      - name: Upload to S3 # Upload build file to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # (8) EC2 배포
      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name ${{env.CODE_DEPLOY_APP_NAME}}
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name ${{env.DEPLOYMENT_GROUP_NAME}}
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip

      # (9) Slack 알림
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          fields: deployment-status,commit,author,repository,event-name
          deployment: ${{ env.DEPLOYMENT_GROUP_NAME }}
          environment: ${{ env.PROJECT_NAME }}
          message: "Deployment completed successfully."
